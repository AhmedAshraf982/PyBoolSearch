# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from home import handleQuery


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(782, 520)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.screen = QtWidgets.QWidget(self.centralwidget)
        self.screen.setGeometry(QtCore.QRect(0, 0, 831, 601))
        self.screen.setStyleSheet("QWidget{backgorung-color:rgb(104, 166, 133)}")
        self.screen.setObjectName("screen")
        self.Heading = QtWidgets.QLabel(self.screen)
        self.Heading.setGeometry(QtCore.QRect(40, 20, 461, 51))
        font = QtGui.QFont()
        font.setFamily("Lucida Fax")
        font.setPointSize(24)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.Heading.setFont(font)
        self.Heading.setObjectName("Heading")
        self.queryLabel = QtWidgets.QLabel(self.screen)
        self.queryLabel.setGeometry(QtCore.QRect(50, 100, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.queryLabel.setFont(font)
        self.queryLabel.setObjectName("queryLabel")
        self.textinput = QtWidgets.QLineEdit(self.screen)
        self.textinput.setGeometry(QtCore.QRect(190, 99, 361, 31))
        self.textinput.setObjectName("textinput")
        self.searchButton = QtWidgets.QPushButton(self.screen, clicked=lambda: self.seacrhQuery())
        self.searchButton.setGeometry(QtCore.QRect(580, 100, 91, 31))
        self.searchButton.setObjectName("searchButton")
        self.ListResult = QtWidgets.QListWidget(self.screen)
        self.ListResult.setGeometry(QtCore.QRect(50, 200, 621, 251))
        self.ListResult.setObjectName("ListResult")
        self.result = QtWidgets.QLabel(self.screen)
        self.result.setGeometry(QtCore.QRect(50, 160, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.result.setFont(font)
        self.result.setObjectName("result")
        self.Query = QtWidgets.QLabel(self.screen)
        self.Query.setGeometry(QtCore.QRect(190, 150, 371, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.Query.setFont(font)
        self.Query.setText("")
        self.Query.setObjectName("Query")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def seacrhQuery(self):
        txt = self.textinput.text()
        if len(txt.strip()) > 0:
            self.Query.clear()
            self.ListResult.clear()
            results = handleQuery(txt)
            self.Query.setText(txt.upper())
            self.textinput.clear()
            if -1 not in results and -2 not in results:
                isDict = type(results[0]) is type({})
                if isDict:
                    try:
                        for result in results:
                            self.ListResult.addItem(str(list(result.keys())[0]))
                    except:
                        self.ListResult.addItem("No Documents is present corresponding to that query")
                else:
                    try:
                        for result in results:
                            self.ListResult.addItem(str(result))
                    except:
                        self.ListResult.addItem("No Documents is present corresponding to that query")
            elif -2 in results:
                self.ListResult.addItem("Enter Query is not valid")
            else:
                self.ListResult.addItem("No Documents is present corresponding to that query")
        else:
            self.Query.setText("No Query Enter")


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "BooleanModel"))
        self.Heading.setText(_translate("MainWindow", "Boolean Retrieval Model"))
        self.queryLabel.setText(_translate("MainWindow", "Enter Query:"))
        self.searchButton.setText(_translate("MainWindow", "Seacrh"))
        self.result.setText(_translate("MainWindow", "Results:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
